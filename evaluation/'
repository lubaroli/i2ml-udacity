#!/usr/bin/python


"""
    Starter code for the evaluation mini-project.
    Start by copying your trained/tested POI identifier from
    that which you built in the validation mini-project.

    This is the second step toward building your POI identifier!

    Start by loading/formatting the data...
"""

import pickle
import sys
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import precision_score, recall_score
sys.path.append("../tools/")
from feature_format import featureFormat, targetFeatureSplit

data_dict = pickle.load(open("../final_project/final_project_dataset.pkl", "r"))

### add more features to features_list!
features_list = ["poi", "salary"]

data = featureFormat(data_dict, features_list)
labels, features = targetFeatureSplit(data)

### your code goes here 

# Split data into train and test
features_train, features_test, labels_train, labels_test = train_test_split(
    features, labels, test_size=0.3, random_state=42
)

clf = DecisionTreeClassifier()
clf.fit(features_train, labels_train)
print("Initial Decision Tree accuracy: %0.3f" %
      clf.score(features_test, labels_test))
print("Number of POIs found in test set: %i out of %i people" % (
      (clf.predict(features_test, labels_test) == 1).sum(),
      len(features_test)))
print(float(len(features_test)-(labels_test.count(1)))/len(features_test))
print("Number of true positives predicted: %i" %
      (sum([i*j for (i, j) in
       zip(clf.predict(features_test, labels_test), labels_test)])))
print(metrics.precision_score(labels_test, clf.predict(features_test,
                                                       labels_test)))
